match  v0.14  -  by Michael W. Richmond <mwrsps@rit.edu>
(C)opyright 2000, 2001, 2002, 2003, 2007, 2010, 2011 Michael W. Richmond, all rights 
reserved

This package contains software to match one list of objects against
another list, allowing for arbitrary translation, rotation, scaling,
and some distortion.  The code is designed specifically for
astronomical data: list of stars or galaxies.  There is a small 
"pre-processor" to put astronomical data into the proper format 
for matching, and a "post-processor" to apply a transformation
to the astronomical coordinates in a list.  Most of the real work
is done by the "match" program itself.

The idea behind the matching of lists is to form a set of triangles
from the points in each list, and look for similar triangles.
The algorithm is described at length in the article
"FOCAS Automatic Catalog Matching Algorithms", by Francisco Valdes
et al., in Publications of the Astronomical Society of the Pacific,
volume 107, page 1119 (1995).  See the following URL (which should
all be entered on one line)

     http://adsabs.harvard.edu/cgi-bin/nph-bib_query?
          bibcode=1995PASP..107.1119V&db_key=AST&high=39463d35aa24090


INSTALLATION

Follow the standard installation procedure:

  - uncompress the gzip'ed tar archive
  - cd match-0.6
  - ./configure
  - make

If your system has Perl installed, you can run a quick self-test:

  - make check

The test assumes that Perl is located in /usr/bin/perl.  If it's 
somewhere else, simply type

  - perl selftest.pl
    
See the documentation in "match.html" for a description of the 
programs, the input and output formats, etc.


REQUIREMENTS

The software is written in ANSI C, and requires nothing beyond the 
standard math library.  The selftest script is written in Perl;
it works with Perl 5, but fails with Perl 4.


NOTES

The pre- and post-processing steps assume that celestial coordinates
are expressed in decimal degrees, not sexigesimal notation.
That is,

        this:   233.0082           not this:  15:32:01.9

Incorporating support for sexigesimal notation is probably a Good
Idea for some future release.



